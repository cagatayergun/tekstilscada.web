@page "/"

@* Gerekli sınıflara ve servislere erişim için using ve inject yönergeleri *@
@using TekstilScada.Models
@using TekstilScada.WebApp.Services
@inject ScadaDataService ScadaDataService
@implements IDisposable

<PageTitle>Genel Bakış</PageTitle>

<h1>Genel Makine Durumu</h1>

@* Eğer serviste henüz hiç makine verisi yoksa bu mesajı göster *@
@if (ScadaDataService.MachineData.IsEmpty)
{
    <p><em>Makinelerden veri bekleniyor... (WebAPI projesinin çalıştığından emin olun)</em></p>
}
else
{
    @* Veri varsa, machine-grid stilini kullanarak kartları sırala *@
    <div class="machine-grid">
        @*
            ScadaDataService içindeki MachineData sözlüğündeki her bir makine için
            döngü oluşturuyoruz. OrderBy ile kartların her zaman aynı sırada
            görünmesini sağlıyoruz.
        *@
        @foreach (var machineStatus in ScadaDataService.MachineData.Values.OrderBy(m => m.MachineId))
        {
            @*
                Daha önce oluşturduğumuz MachineCard bileşenini burada çağırıyoruz.
                MachineStatus parametresine, döngüdeki mevcut makinenin durumunu atıyoruz.
            *@
            <MachineCard MachineStatus="machineStatus" />
        }
    </div>
}

@code {
    // Bu metot, sayfa ilk yüklendiğinde bir kez çalışır.
    protected override void OnInitialized()
    {
        // Veri güncellendiğinde artık doğrudan StateHasChanged'i değil,
        // bizim yazdığımız OnDataUpdatedHandler metodunu çağırıyoruz.
        ScadaDataService.OnDataUpdated += OnDataUpdatedHandler;
    }

    // Bu metot, SignalR'dan yeni bir veri geldiğinde çağrılacak.
    private void OnDataUpdatedHandler()
    {
        // InvokeAsync, içindeki kodun arayüz iş parçacığında
        // güvenli bir şekilde çalıştırılmasını sağlar.
        // Bu sayede "The current thread is not associated with the Dispatcher" hatasını çözeriz.
        InvokeAsync(StateHasChanged);
    }

    // Bu metot, kullanıcı sayfadan ayrıldığında çalışır.
    public void Dispose()
    {
        // Aboneliği sonlandırıyoruz.
        ScadaDataService.OnDataUpdated -= OnDataUpdatedHandler;
    }
}